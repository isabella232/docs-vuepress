(window.webpackJsonp=window.webpackJsonp||[]).push([[249],{644:function(t,a,e){"use strict";e.r(a);var s=e(0),n=Object(s.a)({},function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"aclpolicy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#aclpolicy","aria-hidden":"true"}},[t._v("#")]),t._v(" ACLPOLICY")]),t._v(" "),e("p",[t._v("Updated December 20, 2013")]),t._v(" "),e("h1",{attrs:{id:"overview"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#overview","aria-hidden":"true"}},[t._v("#")]),t._v(" Overview")]),t._v(" "),e("p",[t._v("This document describes the YAML format for ACL Policy definition files.")]),t._v(" "),e("p",[t._v("Multiple aclpolicy files can be stored in the\nsame directory, helping the management of each set of rules. This\nreduces the complexity of each file. The default path is")]),t._v(" "),e("ul",[e("li",[t._v("RPM install: "),e("code",[t._v("/etc/rundeck")])]),t._v(" "),e("li",[t._v("Launcher install: "),e("code",[t._v("$RDECK_BASE/etc")])])]),t._v(" "),e("p",[t._v("Policy files are parsed using YAML and while the structure is rigid,\nadditional information can be added and safely ignored. So creating arbitrary\nelements for documentation or organizational purposes is gracefully parsed.\nThe resulting file must be a valid yaml file.")]),t._v(" "),e("p",[t._v("For more information about the exact resources and actions you need to\nauthorize for the Rundeck application, see the\n[Administration Guide - Authorization](/administration/security/authorization.md#rundeck-resource-authorizations].")]),t._v(" "),e("h2",{attrs:{id:"authorizing-a-certain-action-on-a-resource"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#authorizing-a-certain-action-on-a-resource","aria-hidden":"true"}},[t._v("#")]),t._v(" Authorizing a certain action on a resource")]),t._v(" "),e("p",[t._v("The aclpolicy describes actions that are allowed or denied on certain resources.")]),t._v(" "),e("p",[t._v("The method for determining whether a user has access to perform such an action\nhappens essentially in this way:")]),t._v(" "),e("ol",[e("li",[t._v("Look for policies matching the username or group for the user")]),t._v(" "),e("li",[t._v("Look for a context matching the environment of the given resource\n"),e("ul",[e("li",[t._v("either a specific project by name")]),t._v(" "),e("li",[t._v("or the application level")])])]),t._v(" "),e("li",[t._v("Look for a Type rule for the type of resource\n"),e("ul",[e("li",[t._v("either a specific resource by its named type")]),t._v(" "),e("li",[t._v('or the generic "resource"')])])]),t._v(" "),e("li",[t._v("Iterate through the rules for the type\n"),e("ul",[e("li",[t._v("if a rule matches, and allows the action, mark it and continue.")]),t._v(" "),e("li",[t._v("if a rule matches and denies the action, return DENIED, and stop")])])]),t._v(" "),e("li",[t._v("If it was DENIED, return DENIED. If it was marked, return ALLOWED. Otherwise\nif no rules matched, return REJECTED.")])]),t._v(" "),e("p",[t._v("Thus to allow an action, there has to be a matching rule that allows it, and\nno matching rule that denies it.")]),t._v(" "),e("h2",{attrs:{id:"changes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#changes","aria-hidden":"true"}},[t._v("#")]),t._v(" Changes")]),t._v(" "),e("p",[t._v("The YAML format has changed since version 1.2 to address several issues:")]),t._v(" "),e("ol",[e("li",[t._v("Access control on resources other than Jobs can now be declared")]),t._v(" "),e("li",[t._v("Project level access control is now supported")]),t._v(" "),e("li",[t._v('"Deny" rules can now be declared')]),t._v(" "),e("li",[t._v("Application level access control is also supported, replacing the Role mapping")])]),t._v(" "),e("p",[t._v("The Rundeck server no longer uses role-mapping and instead defers to the aclpolicy for all authorizations.")]),t._v(" "),e("h3",{attrs:{id:"in-version-1-5"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#in-version-1-5","aria-hidden":"true"}},[t._v("#")]),t._v(" In version 1.5")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("by")]),t._v(" clause "),e("code",[t._v("username:")]),t._v(" and "),e("code",[t._v("group:")]),t._v(" now support regular expression matching")]),t._v(" "),e("li",[t._v("legacy XML support has been removed")]),t._v(" "),e("li",[t._v("legacy "),e("code",[t._v("rules:")]),t._v(" section in yaml support has been removed")])]),t._v(" "),e("h3",{attrs:{id:"in-version-3-1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#in-version-3-1","aria-hidden":"true"}},[t._v("#")]),t._v(" In version 3.1")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("notBy")]),t._v(" clause as a negative variant of "),e("code",[t._v("by")]),t._v(" clause")])]),t._v(" "),e("h2",{attrs:{id:"upgrading"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#upgrading","aria-hidden":"true"}},[t._v("#")]),t._v(" Upgrading")]),t._v(" "),e("p",[t._v("Note: The XML format from Rundeck 1.3 and earlier is no longer supported. As\nwell, the YAML format from 1.2 is now only partially supported.")]),t._v(" "),e("p",[t._v("If you are upgrading from Rundeck 1.3 or earlier, you will have to modify\nyour *.aclpolicy files.")]),t._v(" "),e("p",[t._v("If you have XML formatted files, you will need to remove and replace them with\na YAML document in the format described below. A full, admin-level ACL\nis described at the end of this document.")]),t._v(" "),e("p",[t._v("If you have YAML formatted files, you will also need to upgrade them slightly.")]),t._v(" "),e("h2",{attrs:{id:"the-aclpolicy-markup-by-example"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#the-aclpolicy-markup-by-example","aria-hidden":"true"}},[t._v("#")]),t._v(" The aclpolicy markup by example")]),t._v(" "),e("p",[t._v("An example policy document.")]),t._v(" "),e("div",{staticClass:"language-yaml .numberLines extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("description")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Yaml Policy 1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("context")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# declares the context of the ACL")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("project")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.*'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# applies to projects matching a regex.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("for")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resource")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n     "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("equals")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" job\n       "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("allow")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*'")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("job")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n     "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("allow")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*'")]),t._v("\n     "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("match")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n         "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("group")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'group1/.*'")]),t._v("\n       "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("deny")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("by")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("username")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'yml_usr_1'")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("group")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'yml_group_1'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'group2'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),e("p",[t._v("An .aclpolicy supports multiple policy definitions in the form of YAML\ndocuments using the "),e("code",[t._v("---")]),t._v(" separator. There are four elements that make a\npolicy definition: "),e("code",[t._v("decription")]),t._v(", "),e("code",[t._v("context")]),t._v(", "),e("code",[t._v("for")]),t._v(", "),e("code",[t._v("by")]),t._v(".")]),t._v(" "),e("p",[t._v("It's recommended that this description be short and descriptive as it appears\nin the log output.")]),t._v(" "),e("h2",{attrs:{id:"context"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#context","aria-hidden":"true"}},[t._v("#")]),t._v(" "),e("code",[t._v("context")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("context")]),t._v(" section declares the scope of the ensuing policy description.")]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("context")]),t._v(" can contain one of two things:")]),t._v(" "),e("ol",[e("li",[e("code",[t._v("project")])]),t._v(" "),e("li",[e("code",[t._v("application")])])]),t._v(" "),e("p",[t._v("Declaring a "),e("code",[t._v("project:")]),t._v(" declares the name of the project(s) for which the policy\napplies. Its value is a String, and can be a regular expression, for which\nthe project name must match to apply.")]),t._v(" "),e("p",[t._v("If you declare an "),e("code",[t._v("application")]),t._v(" section, its only supported value is "),e("code",[t._v("rundeck")]),t._v(",\nas:\ncontext:\napplication: 'rundeck'")]),t._v(" "),e("p",[t._v("This declares that the policy document describes access control at the\napplication level, rather than for at a project level. You can then declare\naccess control on actions such as creating Projects.")]),t._v(" "),e("p",[t._v('Note that to provide a full "admin" level access control for a user or group,\nthen two policies must be defined, for application level as well as for project\nlevel.')]),t._v(" "),e("p",[e("strong",[t._v("NOTE")]),t._v(" if you are upgrading a yaml 1.2 format document, you will need to add\na "),e("code",[t._v("context")]),t._v(" section.")]),t._v(" "),e("h2",{attrs:{id:"for"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#for","aria-hidden":"true"}},[t._v("#")]),t._v(" "),e("code",[t._v("for")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("for")]),t._v(" section declares a set of resource types, each containing a sequence\nof matching rules which allow or deny certain actions.")]),t._v(" "),e("p",[t._v('Resource types declare the type of a specific resource for the match, and the generic\n"resource" is used to declare rules for all resources of a certain type.')]),t._v(" "),e("p",[t._v("Inside "),e("code",[t._v("for")]),t._v(" is an entry for any of these resource types:")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("job")]),t._v(" - a Rundeck Job")]),t._v(" "),e("li",[e("code",[t._v("node")]),t._v(" - a Node resource")]),t._v(" "),e("li",[e("code",[t._v("adhoc")]),t._v(" - an Ad-hoc execution")]),t._v(" "),e("li",[e("code",[t._v("project")]),t._v(" - a Project")]),t._v(" "),e("li",[e("code",[t._v("resource")]),t._v(" - indicates rules for all resources of a certain kind")])]),t._v(" "),e("p",[t._v("Within each type section is a sequence of rules. Recall that in YAML, a\nsequence is defined using multiple "),e("code",[t._v("-")]),t._v(" indicators, or within "),e("code",[t._v("[")]),t._v(" and "),e("code",[t._v("]")]),t._v(" and separated by commas.")]),t._v(" "),e("p",[t._v("Yaml sequences:")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[t._v("    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" a\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" b\n")])])]),e("p",[t._v("also:")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[t._v("    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),e("h3",{attrs:{id:"type-rules"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#type-rules","aria-hidden":"true"}},[t._v("#")]),t._v(" Type rules")]),t._v(" "),e("p",[t._v("Type rules are in the form:")]),t._v(" "),e("pre",[e("code",[t._v("matching*:\n property: value\nallow: actions\ndeny: actions\n")])]),t._v(" "),e("p",[t._v("Each rule has one or more of these Action entries:")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("allow")]),t._v(" - (List or String) - the actions allowed")]),t._v(" "),e("li",[e("code",[t._v("deny")]),t._v(" - (List or String) - the actions denied")])]),t._v(" "),e("p",[t._v('It also has one or more of these "Matching" entries:')]),t._v(" "),e("ul",[e("li",[e("code",[t._v("match")]),t._v(" - (List or String) - regular expression matches")]),t._v(" "),e("li",[e("code",[t._v("equals")]),t._v(" - (String) - equality matches")]),t._v(" "),e("li",[e("code",[t._v("contains")]),t._v(" - (List or String) - superset membership matches")]),t._v(" "),e("li",[e("code",[t._v("subset")]),t._v(" - (List or String) - subset membership matches")])]),t._v(" "),e("p",[t._v("Each Matching entry is composed of "),e("code",[t._v("property: value")]),t._v(", which declare what property\nof the resource to test, and what value or values to apply the matching rule to.")]),t._v(" "),e("p",[t._v('For example, to declare a rule for a resource with a "name" property of "bob"\nexactly, use '),e("code",[t._v("equals")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[t._v("    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("equals")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" bob\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("allow")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("action1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" action2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("deny")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" action3\n")])])]),e("p",[t._v("For regular expression matching, use "),e("code",[t._v("match")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[t._v("    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("match")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bob|sam'")]),t._v("\n")])])]),e("p",[t._v("For set membership matches, such as matching a Node that must have three\ndifferent tags, you can use "),e("code",[t._v("contains")])]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[t._v("    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("contains")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tags")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("c"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),e("p",[t._v("The "),e("code",[t._v("match")]),t._v(" and "),e("code",[t._v("contains")]),t._v(" allow a list of property values, and all of them\nmust match the resource's property for the rule to match. This allows the basic\nboolean AND logic. For OR logic, you can simply declare another rule in the\nsequence since all rules are checked (except in the case of an explicit deny).")]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("subset")]),t._v(" match allows a list of property values, and will fail if the resource\nhas any values "),e("em",[t._v("not")]),t._v(" included in the subset.")]),t._v(" "),e("h2",{attrs:{id:"by"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#by","aria-hidden":"true"}},[t._v("#")]),t._v(" "),e("code",[t._v("by")])]),t._v(" "),e("p",[t._v("Within "),e("code",[t._v("by")]),t._v(" are "),e("code",[t._v("username")]),t._v(" and "),e("code",[t._v("group")]),t._v(" entries that declare who the policy applies to.")]),t._v(" "),e("p",[t._v("Each entry can contain a single string, or a sequence of strings to define\nmultiple entries.")]),t._v(" "),e("p",[t._v("Regular expressions are supported in the username or group.")]),t._v(" "),e("p",[t._v("A single match will result in further evaluation of the policy.")]),t._v(" "),e("p",[t._v("Examples:")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[t._v("    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("by")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("username")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bob'")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("by")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#using a regular expression")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("username")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dev\\d+'")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("by")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("group")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("test"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("qa"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("prod"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("by")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#using a regular expression")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("group")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dev_team_(alpha|beta|gamma)'")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("by")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("username")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" simon\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" frank\n")])])]),e("h2",{attrs:{id:"notby"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#notby","aria-hidden":"true"}},[t._v("#")]),t._v(" "),e("code",[t._v("notBy")])]),t._v(" "),e("p",[e("code",[t._v("notBy")]),t._v(" is a variation of the "),e("code",[t._v("by")]),t._v(" clause that only works on "),e("code",[t._v("deny")]),t._v(", it follow the same pattern using "),e("code",[t._v("username")]),t._v(" and "),e("code",[t._v("group")]),t._v("\nentries but in this case, the policy applies to anyone not in the group or with a different username.")]),t._v(" "),e("p",[t._v("Each entry can contain a single string, or a sequence of strings to define\nmultiple entries.")]),t._v(" "),e("p",[t._v("Regular expressions are supported in the username or group.")]),t._v(" "),e("p",[t._v("Examples:")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[t._v("    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("notBy")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("username")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bob'")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("notBy")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#using a regular expression")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("username")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dev\\d+'")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("notBy")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("group")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("test"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("qa"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("prod"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("notBy")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#using a regular expression")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("group")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dev_team_(alpha|beta|gamma)'")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("notBy")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("username")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" simon\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" frank\n")])])]),e("h3",{attrs:{id:"actions-element"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#actions-element","aria-hidden":"true"}},[t._v("#")]),t._v(" "),e("code",[t._v("actions")]),t._v(" element")]),t._v(" "),e("p",[t._v("The actions element can be either a single value, or a list of values. A\nsingle value takes the form:")]),t._v(" "),e("pre",[e("code",[t._v("actions: 'an_action'\n")])]),t._v(" "),e("p",[t._v("And a list takes the form:")]),t._v(" "),e("pre",[e("code",[t._v("actions: ['an_action1','an_action2']\n")])]),t._v(" "),e("p",[t._v("Note that the single tick marks are optional according to the yaml\nspecification.")]),t._v(" "),e("p",[t._v("Possible values are limitless so it requires an understanding of the\njob definition you're trying to run. The best way to understand what\nthe actions are is to look at the rundeck-audit.log.\nThis will show all the options as they're being evaluated.")]),t._v(" "),e("h2",{attrs:{id:"example-admin-policy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example-admin-policy","aria-hidden":"true"}},[t._v("#")]),t._v(" Example Admin policy")]),t._v(" "),e("p",[t._v("This document grants full permissions to an 'admin' role:")]),t._v(" "),e("div",{staticClass:"language-yaml .numberLines extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("description")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Admin project level access control. Applies to resources within a specific project.\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("context")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("project")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.*'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# all projects")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("for")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resource")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("equals")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" job\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("allow")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("create"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# allow create jobs")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("equals")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" node\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("allow")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("read"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("create"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("update"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("refresh"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# allow refresh node sources")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("equals")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" event\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("allow")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("read"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("create"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# allow read/create events")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("adhoc")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("allow")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("read"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("run"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("runAs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("kill"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("killAs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# allow running/killing adhoc jobs")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("job")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("allow")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("create"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("read"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("update"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("delete"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("run"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("runAs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("kill"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("killAs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# allow create/read/write/delete/run/kill of all jobs")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("node")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("allow")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("read"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("run"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# allow read/run for nodes")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("by")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("group")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" admin\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("description")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Admin Application level access control"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" applies to creating/deleting projects"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" admin of user profiles"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" viewing projects and reading system information.\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("context")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("application")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'rundeck'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("for")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resource")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("equals")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" project\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("allow")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("create"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# allow create of projects")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("equals")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" system\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("allow")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("read"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("enable_executions"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("disable_executions"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("admin"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# allow read of system info, enable/disable all executions")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("equals")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" system_acl\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("allow")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("read"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("create"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("update"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("delete"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("admin"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# allow modifying system ACL files")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("equals")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" user\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("allow")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("admin"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# allow modify user profiles")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("project")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("match")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.*'")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("allow")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("read"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("import"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("export"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("configure"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("delete"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("admin"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# allow full access of all projects or use 'admin'")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("project_acl")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("match")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.*'")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("allow")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("read"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("create"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("update"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("delete"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("admin"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# allow modifying project-specific ACL files")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("storage")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("allow")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("read"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("create"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("update"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("delete"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# allow access for /ssh-key/* storage content")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("by")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("group")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" admin\n")])])])])},[],!1,null,null,null);a.default=n.exports}}]);