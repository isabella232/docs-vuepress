(window.webpackJsonp=window.webpackJsonp||[]).push([[242],{634:function(e,t,a){"use strict";a.r(t);var s=a(0),i=Object(s.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"html-table-view-converter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#html-table-view-converter","aria-hidden":"true"}},[e._v("#")]),e._v(" HTML Table View Converter")]),e._v(" "),a("p",[e._v("Note: this plugin accepts Intermediate data types and produces "),a("code",[e._v("text/html")])]),e._v(" "),a("p",[e._v("Renders structured data as a Table in HTML. The input should be a List or Map. If the List\ncontains Maps, the first item's keys will be the table headers.")]),e._v(" "),a("p",[e._v("See: (/manual/content-converters/index.md#sanitized-html-output]].")]),e._v(" "),a("h2",{attrs:{id:"input-data-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#input-data-types","aria-hidden":"true"}},[e._v("#")]),e._v(" Input Data Types")]),e._v(" "),a("p",[e._v("These are Intermediate data types, such as Java Collection types. These types are produced by other plugins, see [Related Plugins].")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("application/x-java-map-list")]),e._v(" + "),a("code",[e._v("List<Map>")]),e._v(" * Renders a Table, using the keys of the first Map in the list as the Table headers.")]),e._v(" "),a("li",[a("code",[e._v("application/x-java-col-list")]),e._v(" + "),a("code",[e._v("List")]),e._v(" * Renders a Table, using the first item in the list as a list of Table headers. Each subsequent item is a row, as a Collection of objects, and\neach object will be rendered in a table cell, recursively if it is a List or Map.")]),e._v(" "),a("li",[a("code",[e._v("application/x-java-map")]),e._v(" + "),a("code",[e._v("Map")]),e._v(" * Renders a table with "),a("code",[e._v("Key")]),e._v(" and "),a("code",[e._v("Value")]),e._v(" headers, where each map entry is a row. Recursively renders values that are List or Map type.")]),e._v(" "),a("li",[a("code",[e._v("application/x-java-list")]),e._v(" + "),a("code",[e._v("List")]),e._v(" * Renders a table without headers, with a row for each item. The first column indicates the numeric index, and the second column\nrenders the item, recursively for List or Map types.")]),e._v(" "),a("li",[a("code",[e._v("application/x-java-map-or-list")]),e._v(" + "),a("code",[e._v("Map")]),e._v(" or "),a("code",[e._v("List")]),e._v(" * Used to accept an input type that could be either a List or Map.")])]),e._v(" "),a("h2",{attrs:{id:"output-data-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#output-data-types","aria-hidden":"true"}},[e._v("#")]),e._v(" Output Data Types")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("text/html")]),e._v(" - "),a("code",[e._v("String")])])]),e._v(" "),a("h2",{attrs:{id:"options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options","aria-hidden":"true"}},[e._v("#")]),e._v(" Options")]),e._v(" "),a("p",[e._v("These metadata values can be set in the Log metadata with a prefix of "),a("code",[e._v("content-meta:")]),e._v(":")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("css-class")]),e._v(" - CSS class to use for Table")]),e._v(" "),a("li",[a("code",[e._v("table-title")]),e._v(" - Title to use for Table")])]),e._v(" "),a("h2",{attrs:{id:"related-plugins"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#related-plugins","aria-hidden":"true"}},[e._v("#")]),e._v(" Related Plugins")]),e._v(" "),a("ul",[a("li",[e._v("(/manual/content-converters/json.md)")]),e._v(" "),a("li",[e._v("(/manual/content-converters/properties.md)")]),e._v(" "),a("li",[e._v("(/manual/content-converters/tabular-data.md)")])])])},[],!1,null,null,null);t.default=i.exports}}]);