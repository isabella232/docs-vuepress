(window.webpackJsonp=window.webpackJsonp||[]).push([[88],{544:function(e,o,t){"use strict";t.r(o);var i=t(0),n=Object(i.a)({},function(){var e=this,o=e.$createElement,t=e._self._c||o;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"built-in-node-execution-plugins"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#built-in-node-execution-plugins","aria-hidden":"true"}},[e._v("#")]),e._v(" Built-in Node Execution Plugins")]),e._v(" "),t("h2",{attrs:{id:"when-node-executors-are-invoked"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#when-node-executors-are-invoked","aria-hidden":"true"}},[e._v("#")]),e._v(" When Node Executors are invoked")]),e._v(" "),t("p",[e._v("Rundeck executes Command items on Nodes. The command may be part of a Workflow as defined\nin a Job, and it may be executed multiple times on different nodes.")]),e._v(" "),t("p",[e._v('Several "kinds" of Command items can be specified in Workflows:')]),e._v(" "),t("ol",[t("li",[e._v('"exec" commands - simple system command strings.')]),e._v(" "),t("li",[e._v('"script" commands - either embedded script content, or server-local script.\nfiles can be sent to the specified node and then executed with a set of input arguments.')]),e._v(" "),t("li",[e._v('"jobref" commands - references to other Jobs by name that will be executed with\na set of input arguments.')]),e._v(" "),t("li",[e._v("custom - Users can use or create their own workflow step plugins.")])]),e._v(" "),t("p",[e._v("Rundeck uses the NodeExecutor and FileCopier services as part of the process of\nexecuting these command types.")]),e._v(" "),t("p",[e._v('The procedure for executing an "exec" command is:')]),e._v(" "),t("ol",[t("li",[e._v("load the NodeExecutor provider for the node and context.")]),e._v(" "),t("li",[e._v("call the NodeExecutor#executeCommand method.")])]),e._v(" "),t("p",[e._v('The procedure for executing a "script" command is:')]),e._v(" "),t("ol",[t("li",[e._v("load the FileCopier provider for the node and context.")]),e._v(" "),t("li",[e._v("call the FileCopier#copy* method.")]),e._v(" "),t("li",[e._v("load the NodeExecutor provider for the node and context.")]),e._v(" "),t("li",[e._v('Possibly execute an intermediate command (such as "chmod +x" on the copied file).')]),e._v(" "),t("li",[e._v("execute the NodeExecutor#executeCommand method, passing the filepath of the\ncopied file, and any arguments to the script command.")])]),e._v(" "),t("h2",{attrs:{id:"file-copier-destination-directory"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#file-copier-destination-directory","aria-hidden":"true"}},[e._v("#")]),e._v(" File Copier destination directory")]),e._v(" "),t("p",[e._v("When executing a Script step, the destination file path to be used when copying the script can be set using Node, Project, or Framework configuration values.")]),e._v(" "),t("p",[e._v("Node Attributes:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("file-copy-destination-dir")]),e._v(": The directory on the remote node to copy the script file to before executing it. The default value is "),t("code",[e._v("C:/WINDOWS/TEMP/")]),e._v(" on Windows nodes, and "),t("code",[e._v("/tmp")]),e._v(" for other nodes.")]),e._v(" "),t("li",[t("code",[e._v("osFamily")]),e._v(': specify "windows" for windows nodes.')])]),e._v(" "),t("p",[e._v("The "),t("code",[e._v("file-copy-destination-dir")]),e._v(" can be set at the project and framework level, and can have a default be specified depending on the osfamily as well:")]),e._v(" "),t("p",[e._v("In "),t("code",[e._v("project.properties")]),e._v(" file:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("project.file-copy-destination-dir")]),e._v(" - default for all nodes in project")]),e._v(" "),t("li",[t("code",[e._v("project.file-copy-destination-dir.[osfamily]")]),e._v(" - default for nodes in the project with specified osfamily")])]),e._v(" "),t("p",[e._v("In "),t("code",[e._v("framework.properties")]),e._v(" file:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("framework.file-copy-destination-dir")]),e._v(" - default for all nodes in framework")]),e._v(" "),t("li",[t("code",[e._v("framework.file-copy-destination-dir.[osfamily]")]),e._v(" - default for nodes in the framework with specified osfamily")])]),e._v(" "),t("p",[e._v("The order to determine the value is:")]),e._v(" "),t("ol",[t("li",[e._v("node-specific")]),e._v(" "),t("li",[e._v("project-os-specific")]),e._v(" "),t("li",[e._v("project-specific")]),e._v(" "),t("li",[e._v("framework-os-specific")]),e._v(" "),t("li",[e._v("framework-specific")])]),e._v(" "),t("h2",{attrs:{id:"built-in-node-execution-plugins-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#built-in-node-execution-plugins-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Built-in Node Execution plugins")]),e._v(" "),t("p",[e._v("Rundeck includes the following node execution plugins.")]),e._v(" "),t("dl",[t("dt",[t("code",[e._v("local")])]),e._v(" "),t("dd",[e._v("local execution of a command.")]),e._v(" "),t("dt",[t("code",[e._v("jsch-ssh")])]),e._v(" "),t("dd",[e._v('remote execution of a command via SSH, requiring the "hostname", and "username" attributes on a node.')])]),e._v(" "),t("p",[e._v("For FileCopier, these plugins:")]),e._v(" "),t("dl",[t("dt",[t("code",[e._v("local")])]),e._v(" "),t("dd",[e._v("creates a local temp file for a script.")]),e._v(" "),t("dt",[t("code",[e._v("jsch-scp")])]),e._v(" "),t("dd",[e._v('remote copy of a command via SCP, requiring the "hostname" and "username" attributes on a node.')])])])},[],!1,null,null,null);o.default=n.exports}}]);